name: client_ci

on:
  push:
    branches: [ master ]
    paths:
    - client/**
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  buildAndPush:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup dependencies
        run: |
          sudo add-apt-repository ppa:cncf-buildpacks/pack-cli
          sudo apt-get update
          sudo apt-get install pack-cli
      - name: Docker Login
        uses: docker/login-action@v1.8.0
        with:
          registry: ghcr.io
          username: vxavictor513
          password: ${{ secrets.GHCR_TOKEN }}
          logout: true  
      - uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true
      - name: Create image
        run: |
          pack config default-builder paketobuildpacks/builder:full
          pack build client --buildpack gcr.io/paketo-buildpacks/nginx
        working-directory: client/
      - name: Push image
        run: |
          docker tag client:latest ghcr.io/vxavictor513/client:latest
          docker push ghcr.io/vxavictor513/client:latest
  deploy:
    runs-on: ubuntu-latest
    needs: buildAndPush
    steps:
      - uses: actions/checkout@v2
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      # KUBE_CONFIG_DATA is a base64-encoded kubeconfig file with credentials for Kubernetes to access the cluster. You can get it by running the following command:
      # cat $HOME/.kube/config | base64
      - name: Helm deploy
        uses: koslib/helm-eks-action@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          command: helm upgrade -i client ./client/helm      
      - name: Verify deployment
        uses: qazz92/kubectl@1.0.3
        env:
          kube_confg_data: ${{ secrets.KUBE_CONFIG_DATA }}
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ secrets.AWS_DEFAULT_REGION }}
        with:
          args: rollout status deployment/client
